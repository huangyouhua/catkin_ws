// Generated by gencpp from file open_manipulator_with_tb3_msgs/Pick.msg
// DO NOT EDIT!


#ifndef OPEN_MANIPULATOR_WITH_TB3_MSGS_MESSAGE_PICK_H
#define OPEN_MANIPULATOR_WITH_TB3_MSGS_MESSAGE_PICK_H

#include <ros/service_traits.h>


#include <open_manipulator_with_tb3_msgs/PickRequest.h>
#include <open_manipulator_with_tb3_msgs/PickResponse.h>


namespace open_manipulator_with_tb3_msgs
{

struct Pick
{

typedef PickRequest Request;
typedef PickResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Pick
} // namespace open_manipulator_with_tb3_msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::open_manipulator_with_tb3_msgs::Pick > {
  static const char* value()
  {
    return "1c3e9cad628ebe29faeb3b4f60a0626c";
  }

  static const char* value(const ::open_manipulator_with_tb3_msgs::Pick&) { return value(); }
};

template<>
struct DataType< ::open_manipulator_with_tb3_msgs::Pick > {
  static const char* value()
  {
    return "open_manipulator_with_tb3_msgs/Pick";
  }

  static const char* value(const ::open_manipulator_with_tb3_msgs::Pick&) { return value(); }
};


// service_traits::MD5Sum< ::open_manipulator_with_tb3_msgs::PickRequest> should match 
// service_traits::MD5Sum< ::open_manipulator_with_tb3_msgs::Pick > 
template<>
struct MD5Sum< ::open_manipulator_with_tb3_msgs::PickRequest>
{
  static const char* value()
  {
    return MD5Sum< ::open_manipulator_with_tb3_msgs::Pick >::value();
  }
  static const char* value(const ::open_manipulator_with_tb3_msgs::PickRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::open_manipulator_with_tb3_msgs::PickRequest> should match 
// service_traits::DataType< ::open_manipulator_with_tb3_msgs::Pick > 
template<>
struct DataType< ::open_manipulator_with_tb3_msgs::PickRequest>
{
  static const char* value()
  {
    return DataType< ::open_manipulator_with_tb3_msgs::Pick >::value();
  }
  static const char* value(const ::open_manipulator_with_tb3_msgs::PickRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::open_manipulator_with_tb3_msgs::PickResponse> should match 
// service_traits::MD5Sum< ::open_manipulator_with_tb3_msgs::Pick > 
template<>
struct MD5Sum< ::open_manipulator_with_tb3_msgs::PickResponse>
{
  static const char* value()
  {
    return MD5Sum< ::open_manipulator_with_tb3_msgs::Pick >::value();
  }
  static const char* value(const ::open_manipulator_with_tb3_msgs::PickResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::open_manipulator_with_tb3_msgs::PickResponse> should match 
// service_traits::DataType< ::open_manipulator_with_tb3_msgs::Pick > 
template<>
struct DataType< ::open_manipulator_with_tb3_msgs::PickResponse>
{
  static const char* value()
  {
    return DataType< ::open_manipulator_with_tb3_msgs::Pick >::value();
  }
  static const char* value(const ::open_manipulator_with_tb3_msgs::PickResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // OPEN_MANIPULATOR_WITH_TB3_MSGS_MESSAGE_PICK_H
